var annotated_dup =
[
    [ "Add", "namespace_add.html", "namespace_add" ],
    [ "bar", "namespacebar.html", "namespacebar" ],
    [ "cpp", "namespacecpp.html", "namespacecpp" ],
    [ "foo", "namespacefoo.html", "namespacefoo" ],
    [ "gmock_leak_test", "namespacegmock__leak__test.html", "namespacegmock__leak__test" ],
    [ "gmock_output_test", "namespacegmock__output__test.html", "namespacegmock__output__test" ],
    [ "gtest_break_on_failure_unittest", "namespacegtest__break__on__failure__unittest.html", "namespacegtest__break__on__failure__unittest" ],
    [ "gtest_catch_exceptions_test", "namespacegtest__catch__exceptions__test.html", "namespacegtest__catch__exceptions__test" ],
    [ "gtest_color_test", "namespacegtest__color__test.html", "namespacegtest__color__test" ],
    [ "gtest_env_var_test", "namespacegtest__env__var__test.html", "namespacegtest__env__var__test" ],
    [ "gtest_filter_unittest", "namespacegtest__filter__unittest.html", "namespacegtest__filter__unittest" ],
    [ "gtest_help_test", "namespacegtest__help__test.html", "namespacegtest__help__test" ],
    [ "gtest_list_tests_unittest", "namespacegtest__list__tests__unittest.html", "namespacegtest__list__tests__unittest" ],
    [ "gtest_output_test", "namespacegtest__output__test.html", "namespacegtest__output__test" ],
    [ "gtest_shuffle_test", "namespacegtest__shuffle__test.html", "namespacegtest__shuffle__test" ],
    [ "gtest_test_utils", "namespacegtest__test__utils.html", "namespacegtest__test__utils" ],
    [ "gtest_throw_on_failure_test", "namespacegtest__throw__on__failure__test.html", "namespacegtest__throw__on__failure__test" ],
    [ "gtest_uninitialized_test", "namespacegtest__uninitialized__test.html", "namespacegtest__uninitialized__test" ],
    [ "gtest_xml_outfiles_test", "namespacegtest__xml__outfiles__test.html", "namespacegtest__xml__outfiles__test" ],
    [ "gtest_xml_output_unittest", "namespacegtest__xml__output__unittest.html", "namespacegtest__xml__output__unittest" ],
    [ "gtest_xml_test_utils", "namespacegtest__xml__test__utils.html", "namespacegtest__xml__test__utils" ],
    [ "my_namespace", "namespacemy__namespace.html", "namespacemy__namespace" ],
    [ "namespace1", "namespacenamespace1.html", "namespacenamespace1" ],
    [ "namespace2", "namespacenamespace2.html", "namespacenamespace2" ],
    [ "pump", "namespacepump.html", "namespacepump" ],
    [ "release_docs", "namespacerelease__docs.html", "namespacerelease__docs" ],
    [ "std", "namespacestd.html", "namespacestd" ],
    [ "testing", "namespacetesting.html", "namespacetesting" ],
    [ "upload", "namespaceupload.html", "namespaceupload" ],
    [ "AddTest", "class_add_test.html", null ],
    [ "BarEnvironment", "class_bar_environment.html", "class_bar_environment" ],
    [ "Base", "class_base.html", "class_base" ],
    [ "BiggestIntConvertible", "class_biggest_int_convertible.html", "class_biggest_int_convertible" ],
    [ "Bool", "struct_bool.html", "struct_bool" ],
    [ "CommonTest", "class_common_test.html", "class_common_test" ],
    [ "ConversionHelperBase", "class_conversion_helper_base.html", null ],
    [ "ConversionHelperDerived", "class_conversion_helper_derived.html", null ],
    [ "ConvertibleToAssertionResult", "struct_convertible_to_assertion_result.html", "struct_convertible_to_assertion_result" ],
    [ "Counter", "class_counter.html", "class_counter" ],
    [ "DisabledTest", "class_disabled_test.html", null ],
    [ "ExpectFailureTest", "class_expect_failure_test.html", "class_expect_failure_test" ],
    [ "FailedTest", "class_failed_test.html", null ],
    [ "FailingParamTest", "class_failing_param_test.html", null ],
    [ "FatalFailureInFixtureConstructorTest", "class_fatal_failure_in_fixture_constructor_test.html", "class_fatal_failure_in_fixture_constructor_test" ],
    [ "FatalFailureInSetUpTest", "class_fatal_failure_in_set_up_test.html", "class_fatal_failure_in_set_up_test" ],
    [ "FieldHelper", "class_field_helper.html", "class_field_helper" ],
    [ "FooEnvironment", "class_foo_environment.html", "class_foo_environment" ],
    [ "FooTest", "class_foo_test.html", null ],
    [ "GMockOutputTest", "class_g_mock_output_test.html", "class_g_mock_output_test" ],
    [ "IntegerFunctionTest", "class_integer_function_test.html", null ],
    [ "Interface", "class_interface.html", "class_interface" ],
    [ "InvokeHelper", "class_invoke_helper.html", "class_invoke_helper" ],
    [ "Mock", "class_mock.html", "class_mock" ],
    [ "MockFoo", "class_mock_foo.html", "class_mock_foo" ],
    [ "MyArray", "class_my_array.html", null ],
    [ "MyString", "class_my_string.html", "class_my_string" ],
    [ "MyType", "class_my_type.html", "class_my_type" ],
    [ "NonContainer", "class_non_container.html", null ],
    [ "NonFatalFailureInFixtureConstructorTest", "class_non_fatal_failure_in_fixture_constructor_test.html", "class_non_fatal_failure_in_fixture_constructor_test" ],
    [ "NonFatalFailureInSetUpTest", "class_non_fatal_failure_in_set_up_test.html", "class_non_fatal_failure_in_set_up_test" ],
    [ "OnTheFlyPrimeTable", "class_on_the_fly_prime_table.html", "class_on_the_fly_prime_table" ],
    [ "PreCalculatedPrimeTable", "class_pre_calculated_prime_table.html", "class_pre_calculated_prime_table" ],
    [ "PredFormatFunctor1", "struct_pred_format_functor1.html", "struct_pred_format_functor1" ],
    [ "PredFormatFunctor2", "struct_pred_format_functor2.html", "struct_pred_format_functor2" ],
    [ "PredFormatFunctor3", "struct_pred_format_functor3.html", "struct_pred_format_functor3" ],
    [ "PredFormatFunctor4", "struct_pred_format_functor4.html", "struct_pred_format_functor4" ],
    [ "PredFormatFunctor5", "struct_pred_format_functor5.html", "struct_pred_format_functor5" ],
    [ "PredFunctor1", "struct_pred_functor1.html", "struct_pred_functor1" ],
    [ "PredFunctor2", "struct_pred_functor2.html", "struct_pred_functor2" ],
    [ "PredFunctor3", "struct_pred_functor3.html", "struct_pred_functor3" ],
    [ "PredFunctor4", "struct_pred_functor4.html", "struct_pred_functor4" ],
    [ "PredFunctor5", "struct_pred_functor5.html", "struct_pred_functor5" ],
    [ "Predicate1Test", "class_predicate1_test.html", "class_predicate1_test" ],
    [ "Predicate2Test", "class_predicate2_test.html", "class_predicate2_test" ],
    [ "Predicate3Test", "class_predicate3_test.html", "class_predicate3_test" ],
    [ "Predicate4Test", "class_predicate4_test.html", "class_predicate4_test" ],
    [ "Predicate5Test", "class_predicate5_test.html", "class_predicate5_test" ],
    [ "PrimeTable", "class_prime_table.html", "class_prime_table" ],
    [ "PrimeTableTest", "class_prime_table_test.html", "class_prime_table_test" ],
    [ "PrivateCode", "class_private_code.html", "class_private_code" ],
    [ "PropertyOne", "class_property_one.html", "class_property_one" ],
    [ "PropertyRecordingTest", "class_property_recording_test.html", null ],
    [ "PropertyTwo", "class_property_two.html", "class_property_two" ],
    [ "ProtectedFixtureMethodsTest", "class_protected_fixture_methods_test.html", "class_protected_fixture_methods_test" ],
    [ "Queue", "class_queue.html", "class_queue" ],
    [ "QueueNode", "class_queue_node.html", "class_queue_node" ],
    [ "QueueTest", "class_queue_test.html", "class_queue_test" ],
    [ "QuickTest", "class_quick_test.html", "class_quick_test" ],
    [ "SequenceTestingListener", "class_sequence_testing_listener.html", "class_sequence_testing_listener" ],
    [ "StaticAssertTypeEqTestHelper", "class_static_assert_type_eq_test_helper.html", "class_static_assert_type_eq_test_helper" ],
    [ "StreamableInGlobal", "class_streamable_in_global.html", "class_streamable_in_global" ],
    [ "SuccessfulTest", "class_successful_test.html", null ],
    [ "TEST_before_TEST_F_in_same_test_case", "class_t_e_s_t__before___t_e_s_t___f__in__same__test__case.html", null ],
    [ "TEST_F_before_TEST_in_same_test_case", "class_t_e_s_t___f__before___t_e_s_t__in__same__test__case.html", null ],
    [ "TestingVector", "class_testing_vector.html", null ],
    [ "TestListener", "class_test_listener.html", "class_test_listener" ],
    [ "TypedTest", "class_typed_test.html", null ],
    [ "TypeParamTest", "class_type_param_test.html", null ],
    [ "UnprintableTemplateInGlobal", "class_unprintable_template_in_global.html", "class_unprintable_template_in_global" ],
    [ "ValueParamTest", "class_value_param_test.html", null ],
    [ "VeryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooogName", "class_very_loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo570db76e21fa868abfe0f6323a68c9ba.html", null ],
    [ "Widget", "class_widget.html", "class_widget" ]
];